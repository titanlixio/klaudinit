---

- name:  docker.yaml | Docker roles
  hosts: docker
  become: True
  become_user: root

  handlers:
    - name: stop docker
      systemd: "name=docker state=stopped"
    - name: clean docker classic
      file: "path=/var/lib/docker state=absent"

  pre_tasks:
    - name: Create groups
      group:
        name:     "{{item.name}}"
        gid:      "{{item.gid}}"
        state:    present
      with_items: "{{docker_group_items}}"
      tags:
        - docker
        - groups
      when:
        - docker_group_items is defined

    - name: Create docker data directory
      file:
        path: "{{docker_data_dir}}"
        state: directory
        owner: "root"
        group: "{{docker_group}}"
      tags:
        - docker
      
    - name: Add download.docker.com DNS resolv for dev environment
      shell: "echo '{{docker_repo_ip}}	download.docker.com'|tee -a /etc/hosts"
      tags:
        - docker
      #when:
      #  - environment == 'dev'

  roles:
    - ansible-role-docker

  post_tasks:
    - name: Docker service file
      template:
        src: etc/systemd/system/docker.service.j2
        dest: /usr/lib/systemd/system/docker.service
      notify:
        - stop docker
      tags:
        - docker
        - reset

    - name: Docker service config
      template:
        src: etc/default/docker.j2
        dest: "{{docker_conf_dir}}/docker"
      tags:
        - docker
        - reset

    - name: Docker service restart
      systemd:
        name: docker
        state: started
        enabled: yes
        daemon_reload: yes
      notify:
        - clean docker classic
      tags:
        - docker
        - reset

     - name: Docker clusters home
       shell: |
         [ ! -f /home/vagrant/clusters ] \
         && [ -d /tmp/klaudinit/clusters ] \
         && ln -s /tmp/klaudinit/clusters /home/vagrant/clusters
       tags:
         - docker
         - reset
